[{"D:\\Desktop\\todo\\src\\index.js":"1","D:\\Desktop\\todo\\src\\reportWebVitals.js":"2","D:\\Desktop\\todo\\src\\App.js":"3","D:\\Desktop\\todo\\src\\Todo.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":330,"mtime":1608528057996,"results":"8","hashOfConfig":"6"},{"size":3061,"mtime":1608528057995,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1b0drk3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\Desktop\\todo\\src\\index.js",[],["20","21"],"D:\\Desktop\\todo\\src\\reportWebVitals.js",[],"D:\\Desktop\\todo\\src\\App.js",[],"D:\\Desktop\\todo\\src\\Todo.js",["22"],"import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      edit: false,\r\n      id: null,\r\n      mockData: [{\r\n        id: '1',\r\n        title: 'Buy Milk.',\r\n        done: false,\r\n        date: new Date()\r\n      }, {\r\n        id: '2',\r\n        title: 'Meeting with Ali.',\r\n        done: false,\r\n        date: new Date()\r\n      }, {\r\n        id: '3',\r\n        title: 'Tea break.',\r\n        done: false,\r\n        date: new Date()\r\n      }, {\r\n        id: '4',\r\n        title: 'Go for a run.',\r\n        done: false,\r\n        date: new Date()\r\n      }]\r\n    }\r\n  }\r\n\r\n  onSubmitHandle(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      mockData: [...this.state.mockData, {\r\n        id: Date.now(),\r\n        title: event.target.item.value,\r\n        done: false,\r\n        date: new Date()\r\n      }]\r\n    });\r\n\r\n    event.target.item.value = '';\r\n  }\r\n\r\n  onDeleteHandle() {\r\n    let id = arguments[0];\r\n\r\n    this.setState({\r\n      mockData: this.state.mockData.filter(item => {\r\n        if (item.id !== id) {\r\n          return item;\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  onEditHandle(event) {\r\n    this.setState({\r\n      edit: true,\r\n      id: arguments[0],\r\n      title: arguments[1]\r\n    });\r\n  }\r\n\r\n  onUpdateHandle(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      mockData: this.state.mockData.map(item => {\r\n        if (item.id === this.state.id) {\r\n          item['title'] = event.target.updatedItem.value;\r\n          return item;\r\n        }\r\n\r\n        return item;\r\n      })\r\n    });\r\n\r\n    this.setState({\r\n      edit: false\r\n    });\r\n  }\r\n\r\n  onCompleteHandle() {\r\n    let id = arguments[0];\r\n\r\n    this.setState({\r\n      mockData: this.state.mockData.map(item => {\r\n        if (item.id === id) {\r\n          item['done'] = true;\r\n          return item;\r\n        }\r\n\r\n        return item;\r\n      })\r\n    });\r\n  }\r\n\r\n  renderEditForm() {\r\n    if (this.state.edit) {\r\n      return <form onSubmit={this.onUpdateHandle.bind(this)}>\r\n        <input type=\"text\" name=\"updatedItem\" className=\"item\" defaultValue={this.state.title} />\r\n        <button className=\"update-add-item\">Update</button>\r\n      </form>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderEditForm()}\r\n        <form onSubmit={this.onSubmitHandle.bind(this)}>\r\n          <input type=\"text\" name=\"item\" className=\"item\" />\r\n          <button className=\"btn-add-item\">Add</button>\r\n        </form>\r\n        <ul>\r\n          {this.state.mockData.map(item => (\r\n            <li key={item.id} className={ item.done ? 'done' : 'hidden' }>\r\n              {item.title}\r\n              <button onClick={this.onDeleteHandle.bind(this, item.id)}>Delete</button>\r\n              <button onClick={this.onEditHandle.bind(this, item.id, item.title)}>Edit</button>\r\n              <button onClick={this.onCompleteHandle.bind(this, item.id)}>Complete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":54,"column":49,"nodeType":"29","messageId":"30","endLine":54,"endColumn":51},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]